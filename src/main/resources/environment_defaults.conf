env.name=ide
cluster.name=${component.name}"-"${env.name}
instance.name=node-0
instance.fqn=${cluster.name}"-"${instance.name}
log.path.current=/tmp/logs/${instance.fqn}
log.path.archive=/tmp/logs/${instance.fqn}/archive
log.level=INFO
sysout.detach=false
syserr.detach=false
daemon.pidfile=${log.path.current}/${instance.fqn}.pid
server.root =
{
  type=com.askme.mandelbrot.server.RootServer
  port=9999
  host="192.168.1.8"
  timeout=5
  actorSystem {
    name=${cluster.name}"-akka"
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = INFO
    }
    spray.can.server {
      remote-address-header=on
    }
  }

  es {
    cluster {
      name=${cluster.name}
    }
    node.name=${instance.name}
    discovery.zen.ping.multicast.enabled=false
    discovery.zen.ping.unicast.hosts=${server.root.host}
    network.host="_en0:ipv4_"
    path.data="/tmp/data/es"
    path.logs=${log.path.current}
    path.conf="/tmp/esconfig"
    indices.cache.query.size: "5%"
    indices.cache.filter.size: "30%"
    indices.memory.index_buffer_size: "20%"
    indices.memory.max_index_buffer_size: "2048mb"
    indices.store.throttle.max_bytes_per_sec: "20mb"
  }

  hazel {
    logging.type=slf4j
    multicast.enabled=false
    tcpip.enabled=true
    tcpip.members=[${server.root.host}]
    tcpip.required.member=${server.root.host}
    port.number=5701
    port.autoincrement=false
    interfaces=["192.168.*.*"]
    interface.enabled=true
  }

  spark {
    master="local[4]"
    app.name=${instance.fqn}
    executor.memory="1g"
    shuffle.spill="true"
    logConf="true"
    local.dir="/tmp"
    streaming.batch.duration=2
  }

  handler {
    name=${instance.fqn}"-http"
    timeoutms=10000
    max-docs-per-shard=100000
  }

  threads {
    batch=2
    user=8
  }
}
